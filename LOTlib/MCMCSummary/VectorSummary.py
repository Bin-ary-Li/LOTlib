import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider
from MCMCSummary import MCMCSummary

class VectorSummary(MCMCSummary):
    def __init__(self, skip=100, cap=100):
        MCMCSummary.__init__(self, skip=skip, cap=cap)

    def graph_samples(self):
        # Numpy array of sampled values for each vector element altered in proposals
        vector_data = zip(*[[s.value[i] for i in s.propose_idxs] for s in self.samples])
        vector_data = [np.array(l) for l in vector_data]

        # Set up initial violinplot
        fig, ax = plt.subplots()
        fig.subplots_adjust(bottom=0.2, left=0.1)
        ax.set_title('Distribution of values over GrammarRules generated by MH')
        violin_results = ax.violinplot(vector_data, points=100, vert=False, widths=0.7,
                                       showmeans=True, showextrema=True, showmedians=True)

        def update_violinplot(value):
            """Update the violinplot when you move the slider"""
            ax.clear()
            data = [vector[0:value] for vector in vector_data]
            ax.violinplot(data, points=100, vert=False, widths=0.7,
                          showmeans=True, showextrema=True, showmedians=True)
            fig.canvas.draw_idle()

        # Add slider to plot; slider updates violinplot as a function of how many samples have been generated
        slider_ax = plt.axes([0.1, 0.1, 0.8, 0.02])
        slider = Slider(slider_ax, "after N samples", valmin=1., valmax=self.sample_count, valinit=1.)
        slider.on_changed(update_violinplot)
        plt.show()

        return violin_results

    def print_top_samples(self):
        if self.top_samples is None:
            self.set_top_samples()
        print '~'*100, '\nTop GrammarHypotheses:'
        for g_h in self.top_samples:
            print '*'*90
            print 'Vector: ', ['%.3f' % v for v in g_h.value]
            print 'Prior: %.3f' % g_h.prior, '\tLikelihood: %.3f' % g_h.likelihood, \
                '\tPostScore: %.3f' % g_h.posterior_score



